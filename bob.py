from sign_verify import sign, verify

import socket
import random
import rsa

BobPrivateKey = rsa.PrivateKey(133941373447083432953675239646304873180536034365111272537669660366967728664873283607923620824431774638909571906792026007764524432697808817127158722392811140777638582741874392042346141628601599359166440086041909246959774044294221500710232120474799034178981559394839615661936749824538355640106626018053690511053, 65537, 47169795675094765286339388910641568472874432353430400692271781760984103294097614869018679045850212226162822826933792518107408393833489898825012163372332313798209105475908543780232652003384226920738798926350697985601659218744824153076691733731772996981892664738627947276991043304953009015196823484519373865473, 50342007724426112143964494808820781200077309712905731716104179258876554398850813086572232039123740810034067467845060307207579830822987946185440966488384101543911901, 2660628359923250066579637116968839461189997585644132587489023615841814971759577177609158207840462112140287818144987514815267209712126805430610353)
AnaPublicKey = rsa.PublicKey(95078622400751464784088944615142171354103648903573714957619293570236011017925211450474115784776965130620738494165206329149215753492096036004564237459877699838721618536470176845949410556239074498747847008807267783301893430726346624795474219875114258441253983305619223397293891601730920090166877329675845490381, 65537)

ClientMultiSocket = socket.socket()
host = '127.0.0.1'
port = 2004

try:
    ClientMultiSocket.connect((host, port))
except socket.error as e:
    print(str(e))

res = ClientMultiSocket.recv(1024)
i = int(res.decode('utf-8'))
res = ClientMultiSocket.recv(1024)
p = int(res.decode('utf-8'))
n = random.randrange(1649, 84561)

value = (i ** n) % p

ClientMultiSocket.send(str.encode(str(value)))
ClientMultiSocket.send(sign(str(value), BobPrivateKey))

res = ClientMultiSocket.recv(1024)
sign = ClientMultiSocket.recv(1024)
anaValue = int(res.decode('utf-8'))

SecretValue = (anaValue ** n) % p
print(f'Bob obteve como chave secreta o valor: {SecretValue}')

if verify(str(anaValue), sign, AnaPublicKey):
    print('Assinatura v√°lida')

ClientMultiSocket.close()