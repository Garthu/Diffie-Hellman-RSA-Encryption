from sign_verify import sign, verify

import socket
import random
import rsa

AnaPrivateKey = rsa.PrivateKey(95078622400751464784088944615142171354103648903573714957619293570236011017925211450474115784776965130620738494165206329149215753492096036004564237459877699838721618536470176845949410556239074498747847008807267783301893430726346624795474219875114258441253983305619223397293891601730920090166877329675845490381, 65537, 3239552677432259957930186205130116859693203045633460571896240025364862789005096314584260807595815541399150236621616884095857283329231585949893828469300830183371685352253334030785247251181204218472931975257613841451677244907160670046069907389970726379795880590371799388227270918860649596392819907662886818849, 47404988085988461812262721289616817583613869306625797937791163711999988055211766592870124354037886855529584772232713873740635220757552568264477165936504277500651429, 2005667045592063869440953475501225528177581648785007267865408213748934763925554532130221155899158159895432807279051683751627870516155222521530889)
BobPublicKey = rsa.PublicKey(133941373447083432953675239646304873180536034365111272537669660366967728664873283607923620824431774638909571906792026007764524432697808817127158722392811140777638582741874392042346141628601599359166440086041909246959774044294221500710232120474799034178981559394839615661936749824538355640106626018053690511053, 65537)


ClientMultiSocket = socket.socket()
host = '127.0.0.1'
port = 2004

try:
    ClientMultiSocket.connect((host, port))
except socket.error as e:
    print(str(e))

res = ClientMultiSocket.recv(1024)
i = int(res.decode('utf-8'))
res = ClientMultiSocket.recv(1024)
p = int(res.decode('utf-8'))
n = random.randrange(1649, 84561)

value = (i ** n) % p

ClientMultiSocket.send(str.encode(str(value)))
ClientMultiSocket.send((sign(str(value), AnaPrivateKey)))

res = ClientMultiSocket.recv(1024)
sign = ClientMultiSocket.recv(1024)
bobValue = int(res.decode('utf-8'))

SecretValue = (bobValue ** n) % p
print(f'Ana obteve como chave secreta o valor: {SecretValue}')

if verify(str(bobValue), sign, BobPublicKey):
    print('Assinatura v√°lida')

ClientMultiSocket.close()